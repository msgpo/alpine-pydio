server {
	listen 80;
	root /config/www;
	index index.php;

	keepalive_requests	  10;
	keepalive_timeout	  60 60;
	access_log /config/log/pydio/access_pydio_log;
	error_log /config/log/pydio/error_pydio_log;

	server_name http;

	charset utf-8;

	error_page 500 502 503 504	/50x.html;
	location = /50x.html {
		root   /usr/share/nginx/html;
	}

	client_max_body_size 0;

	location ~ ^/secure {
		error_page 497	https://$host$request_uri;
		return 301 https://$host$request_uri; # enforce https
	}

	rewrite ^/dashboard|^/settings|^/welcome|^/ws- /index.php last;
	if ( !-e $request_filename ) {
		# WebDAV Rewrites
		rewrite ^/shares /dav.php last;
		# Sync client
		rewrite ^/api /rest.php last;
		# External users
		rewrite ^/user ./index.php?get_action=user_access_point last;
		# Public shares
		rewrite ^/data/public/([a-zA-Z0-9_-]+)\.php$ /data/public/share.php?hash=$1?;
	}
	rewrite ^/data/public/([a-zA-Z0-9_-]+)--([a-z]+)$ /data/public/share.php?hash=$1&lang=$2?;
	rewrite ^/data/public/([a-zA-Z0-9_-]+)$ /data/public/share.php?hash=$1?;

	# Prevent Clickjacking
	add_header X-Frame-Options "SAMEORIGIN";

	# Only allow these request methods and do not accept DELETE, SEARCH and other methods
	if ( $request_method !~ ^(GET|HEAD|POST|PROPFIND|OPTIONS)$ ) {
		return 444;
	}

	location ~* ^/(?:\.|conf|data/(?:files|personal|logs|plugins|tmp|cache)|plugins/editor.zoho/agent/files) {
		deny all;
	}

	location ~ \.php$ {
		# for ^/(index|plugins) request_uri should be changed
		set $request_url $request_uri;
		if ( $uri ~ ^/(index|plugins) ) {
			set $request_url /;
		}
		fastcgi_param REQUEST_URI $request_url;

		# Prevents autofixing of path which could be used for exploit
		try_files $uri = 404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# With php5-cgi alone:
		# fastcgi_pass 127.0.0.1:9000;
		# With php5-fpm:
		fastcgi_pass unix:/run/php-fpm.sock;
		fastcgi_index index.php;
		include /etc/nginx/fastcgi_params;
	}
	# Enables Caching
	location ~* \.(ico|css|js)$ {
		expires 7d;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	}
}

server {
	listen 443 ssl;
	root /config/www;
	index index.php;

	keepalive_requests	  10;
	keepalive_timeout	  60 60;
	access_log /config/log/pydio/access_pydio_log;
	error_log /config/log/pydio/error_pydio_log;

	server_name https;

	charset utf-8;

	ssl_certificate			   /config/keys/certificate.crt;
	ssl_certificate_key		   /config/keys/privatekey.pem;
	ssl_session_cache		   shared:SSL:10m;
	ssl_session_timeout		   10m;
	ssl_protocols			   SSLv3 TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers				   AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
	ssl_prefer_server_ciphers  on;

	error_page 404 /404.html;
	location = /404.html {
		root   /usr/share/nginx/html;
	}

	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root   /usr/share/nginx/html;
	}

	client_max_body_size 0;

	location ~ ^/secure {

		auth_basic "Restricted Area!";
		auth_basic_user_file "/config/keys/.htpasswd";

		try_files $uri $uri/ /index.html =404;
	}

	rewrite ^/dashboard|^/settings|^/welcome|^/ws- /index.php last;
	if ( !-e $request_filename ) {
		# WebDAV Rewrites
		rewrite ^/shares /dav.php last;
		# Sync client
		rewrite ^/api /rest.php last;
		# External users
		rewrite ^/user ./index.php?get_action=user_access_point last;
		# Public shares
		rewrite ^/data/public/([a-zA-Z0-9_-]+)\.php$ /data/public/share.php?hash=$1?;
	}
	rewrite ^/data/public/([a-zA-Z0-9_-]+)--([a-z]+)$ /data/public/share.php?hash=$1&lang=$2?;
	rewrite ^/data/public/([a-zA-Z0-9_-]+)$ /data/public/share.php?hash=$1?;

	# Prevent Clickjacking
	add_header X-Frame-Options "SAMEORIGIN";

	# Only allow these request methods and do not accept DELETE, SEARCH and other methods
	if ( $request_method !~ ^(GET|HEAD|POST|PROPFIND|OPTIONS)$ ) {
		return 444;
	}

	location ~* ^/(?:\.|conf|data/(?:files|personal|logs|plugins|tmp|cache)|plugins/editor.zoho/agent/files) {
		deny all;
	}

	location ~ \.php$ {
		# for ^/(index|plugins) request_uri should be changed
		set $request_url $request_uri;
		if ( $uri ~ ^/(index|plugins) ) {
			set $request_url /;
		}
		fastcgi_param REQUEST_URI $request_url;

		# Prevents autofixing of path which could be used for exploit
		try_files $uri = 404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# With php5-cgi alone:
		# fastcgi_pass 127.0.0.1:9000;
		# With php5-fpm:
		fastcgi_pass unix:/run/php-fpm.sock;
		fastcgi_index index.php;
		include /etc/nginx/fastcgi_params;
	}
	# Enables Caching
	location ~* \.(ico|css|js)$ {
		expires 7d;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	}
}



